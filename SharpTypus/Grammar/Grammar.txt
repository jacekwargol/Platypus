// operators
mult_op =			"*" | "/" ;
add_op =			"+" | "-" ;
unary_op =			"!" | "-" ;
eq_op =				"==" | "!=" ;
comp_op =			"<" | ">" | "<=" | ">=" ;

type =				I32 | F64 | STRING | BOOL


program =			declaration* EOF ;

declaration =		var_declaration | statement ;

var_declaration =	"let" IDENTIFIER ":" type ( "=" expression )? ";" ;

statement =			exprStatement ;
exprStatement =		expression ";" ;


// expressions
expression =		equality ;
equality =			comparison (eq_op comparision)* ;
comparison =		additive (comp_op additive)* ;
additive =			multiplicative (add_op multiplicative)* ;
multiplicative =	unary (mult_op unary)* ;
unary =				primary | unary_op unary ;
primary =			literal | grouping | IDENTIFIER ;
grouping =			"(" expression ")" ;
literal =			I32 | F64 | STRING | "true" | "false" ;



